# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

companies:
  type: kedro_spaceflights_mlops.datasets.SimplePolarsDatabaseDataset
  uri: ${globals:snowflake_uri_raw}
  table_name: COMPANIES
  engine: adbc
  save_args:
    if_table_exists: replace

reviews:
  type: kedro_spaceflights_mlops.datasets.SimplePolarsDatabaseDataset
  uri: ${globals:snowflake_uri_raw}
  table_name: REVIEWS
  engine: adbc
  save_args:
    if_table_exists: replace

shuttles:
  type: kedro_spaceflights_mlops.datasets.SimplePolarsDatabaseDataset
  uri: ${globals:snowflake_uri_raw}
  table_name: SHUTTLES
  engine: adbc
  save_args:
    if_table_exists: replace

preprocessed_companies:
  type: kedro_spaceflights_mlops.datasets.SimplePolarsDatabaseDataset
  uri: ${globals:snowflake_uri_data}
  table_name: PREPROCESSED_COMPANIES
  engine: adbc
  save_args:
    if_table_exists: replace

preprocessed_shuttles:
  type: kedro_spaceflights_mlops.datasets.SimplePolarsDatabaseDataset
  uri: ${globals:snowflake_uri_data}
  table_name: PREPROCESSED_SHUTTLES
  engine: adbc
  save_args:
    if_table_exists: replace

model_input_table@polars:
  type: polars.EagerPolarsDataset
  filepath: data/03_primary/model_input_table.parquet
  file_format: parquet

model_input_table@pandas:
  type: pandas.ParquetDataset
  filepath: data/03_primary/model_input_table.parquet

regressor:
  type: pickle.PickleDataset
  filepath: data/06_models/regressor.pickle
  versioned: true

shuttle_passenger_capacity_plot_exp:
  type: plotly.PlotlyDataset
  filepath: data/08_reporting/shuttle_passenger_capacity_plot_exp.json
  versioned: true
  plotly_args:
    type: bar
    fig:
      x: shuttle_type
      y: passenger_capacity
      orientation: h
    layout:
      xaxis_title: Shuttles
      yaxis_title: Average passenger capacity
      title: Shuttle Passenger capacity

shuttle_passenger_capacity_plot_go:
  type: plotly.JSONDataset
  filepath: data/08_reporting/shuttle_passenger_capacity_plot_go.json
  versioned: true

dummy_confusion_matrix:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/dummy_confusion_matrix.png
  versioned: true
